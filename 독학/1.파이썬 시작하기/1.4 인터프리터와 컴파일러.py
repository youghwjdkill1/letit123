# 이번 주제는 코딩보다는 설명에 가깝기떄문에
# 영상과 설명으로 대체 하였습니다
# https://www.youtube.com/watch?v=Dx2tSsd3aFc 영상링크

# 영상내용
# 일단 컴퓨터에게 일을 시키려면은 일단 말을 해줘야지 일을 하는데
# 컴퓨터는 우리가 하는말을 잘 알아듣지 못하죠
# 컴퓨터에게 일을 시키는 것은 외계행성에서 우주선을 수리할 정비사가 되는것이랑 비슷하죠
# 그래서 우리말을 외계어로 번역을 해줘야 하는데
# 번역해주는 로봇이 2종류가 있습니다

# 인터프리터라는 번역기와 컴파일러 라는 번역기가 있습니다
# 우주선을 수리하는 법을 차례대로 쓴 설명서를 만들었다고 해볼까요
# 그리고 우선 인터프리터라는 로봇에게 번역을 맞기면
# 일단 지시문을 읽는걸 하죠
# 1.로켓 엔지의 덮개를 연다
# 이 문장을 바로 외계어로 번역을하고
# 외계 정비사에게 바로 전달하고 실해라고 요구하죠
# 그리고 다시 다음 지시문을 읽고
# 정비사에게 다시 전달하고 정비사는 바로 실행하죠
# 이것을 반복합니다
# 인터프리터는 이렇게 번역하고 일하는거고
# 한문장 한문장 바로 해석하고 전하죠
# 이 방식은 한 문장을 번역할 떄마다 정비사가 기다려야 해서 좀 느린게 있습니다
# 그렇지만 중간에 실수가 있으면 바로잡을 기회가 있죠

# 컴파일러는 일단 전체 지시문을 다 받아서
# 망설이지 않고 한번에 모두 외계어로 번역을 합니다
# 번역을 다 하면 번역한 설명서를 주고 놀러 가버리죠
# 이걸 외계정비사한테 주면 아주 빨리 진행돼요
# 하지만 컴파일러는 한번에 모든걸 번역하기 떄문에
# 만약 잘못된게 있더라도 고치기엔 너무 늦어버리는 상황이 나올수도 있습니다

# 인터프리터와 컴파일러를 설명하면서 비유한 상황은 컴퓨터 상황가 매우 비슷해요

# 정리하자면
# 인터프리터는 속도는 느리지만 빨리 시작하고
# 진행상황을 바로바로 알수있고
# 컴파일러는 프로그램을 실행하기 전에 준비 시간이 좀더 걸리지만
# 그 후부터는 아주 빠르고 효율적으로 실행돼요

# 인터프리터와 컴파일러의 차이를 기억하려면 단어를 잘 기억하면 됩니다
# interpreter에서 inter는 사이(between)를 뜻합니다
# 인터프리터는 항상 프로그램과 컴퓨터 사이에 있으면서 한 줄씩 번역해요

# compile은 차고차고 쌓는다(pile together)는 뜻이예요
# 컴파일러는 전체 프로그램을 차곡차곡 쌓아서 전체를 한 번에 번역해요

# 어떤 번역리를 사용하는지는 여러분에게 달려있어요

# 영상도 보고 설명도 꼭 보시길 바랍니다

